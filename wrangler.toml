name = "health-app"
main = "dist-worker/index.js"
compatibility_date = "2024-08-30"
compatibility_flags = ["nodejs_compat"]

[build]
command = "npm run build"
cwd = "."

# Development environment
[env.development]
name = "health-app-dev"
vars = { ENVIRONMENT = "development", ALLOWED_ORIGINS = "http://localhost:5173,http://127.0.0.1:5173" }

# Production environment
[env.production]
name = "health-app-prod"
vars = { ENVIRONMENT = "production", ALLOWED_ORIGINS = "https://yourdomain.example" }

# Assets configuration for static files
[assets]
directory = "./dist"
binding = "ASSETS"

# KV storage for session/cache data
[[kv_namespaces]]
binding = "HEALTH_KV"
id = ""
preview_id = ""

# R2 bucket for file storage
[[r2_buckets]]
binding = "HEALTH_STORAGE"
bucket_name = ""

# WebSocket support
[durable_objects]
bindings = [
  { name = "HEALTH_WEBSOCKET", class_name = "HealthWebSocket" },
  { name = "RATE_LIMITER", class_name = "RateLimiter" }
]

# Analytics
[analytics_engine_datasets]
binding = "HEALTH_ANALYTICS"

# Custom domain configuration (to be set up later)
# [env.production.routes]
# pattern = "health.yourdomain.com/*"
# zone_name = "yourdomain.com"

# Secrets to set via Wrangler (do not commit):
# wrangler secret put ENC_KEY
# wrangler secret put API_ISS
# wrangler secret put API_AUD
# wrangler secret put API_JWKS_URL
# wrangler secret put DEVICE_JWT_SECRET

# Note: For distributed rate limiting and session management, prefer Durable Objects.

# Cron trigger for scheduled purge
[triggers]
crons = ["0 * * * *"] # hourly
