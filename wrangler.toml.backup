name = "health-app"
main = "dist-worker/index.js"
compatibility_date = "2024-08-30"
compatibility_flags = ["nodejs_compat"]
workers_dev = false

[build]
command = "npm run build:worker"
cwd = "."
watch_dir = "src"

# Assets configuration for React app
[assets]
directory = "./dist"
binding = "ASSETS"
# Include HTML, CSS, JS, images for React SPA
include = ["**/*"]
exclude = ["node_modules/**/*", "src/**/*"]

# Development environment
[env.development]
name = "health-app-dev"
vars = {
  ENVIRONMENT = "development",
  ALLOWED_ORIGINS = "http://localhost:5173,http://127.0.0.1:5173,http://localhost:5000,http://127.0.0.1:5000",

  # Local development endpoints
  BASE_URL = "http://localhost:8789",
  API_BASE_URL = "http://localhost:8789/api",
  WEBSOCKET_URL = "ws://localhost:3001",
  FILES_BASE_URL = "http://localhost:8789/files",

  # Application configuration
  LOG_LEVEL = "debug",
  FALL_DETECTION_THRESHOLD = "0.75",
  EMERGENCY_RESPONSE_DELAY = "30",
  MAX_FILE_SIZE = "100MB",
  SESSION_TIMEOUT = "24h"
}

# Production environment
[env.production]
name = "health-app-prod"
vars = {
  ENVIRONMENT = "production",
  ALLOWED_ORIGINS = "https://health.andernet.dev",

  # Production subdomain endpoints
  BASE_URL = "https://health.andernet.dev",
  API_BASE_URL = "https://api.health.andernet.dev",
  WEBSOCKET_URL = "wss://ws.health.andernet.dev",
  EMERGENCY_API_URL = "https://emergency.health.andernet.dev",
  CAREGIVER_API_URL = "https://caregiver.health.andernet.dev",
  FILES_BASE_URL = "https://files.health.andernet.dev",

  # Production configuration
  LOG_LEVEL = "info",
  FALL_DETECTION_THRESHOLD = "0.85",
  EMERGENCY_RESPONSE_DELAY = "30",
  MAX_FILE_SIZE = "500MB",
  SESSION_TIMEOUT = "12h"
}
watch_dir = "src"

# Assets configuration for React app
[assets]
directory = "./dist"
binding = "ASSETS"
# Include HTML, CSS, JS, images for React SPA
include = ["**/*"]
exclude = ["node_modules/**/*", "src/**/*"]

# Development environment
[env.development]
name = "health-app-dev"
vars = {
  ENVIRONMENT = "development",
  ALLOWED_ORIGINS = "http://localhost:5173,http://127.0.0.1:5173,http://localhost:5000,http://127.0.0.1:5000",

  # Local development endpoints
  BASE_URL = "http://localhost:8789",
  API_BASE_URL = "http://localhost:8789/api",
  WEBSOCKET_URL = "ws://localhost:3001",
  FILES_BASE_URL = "http://localhost:8789/files",

  # Application configuration
  LOG_LEVEL = "debug",
  FALL_DETECTION_THRESHOLD = "0.75",
  EMERGENCY_RESPONSE_DELAY = "30",
  MAX_FILE_SIZE = "100MB",
  SESSION_TIMEOUT = "24h"
}

# Production environment
[env.production]
name = "health-app-prod"
vars = {
  ENVIRONMENT = "production",
  ALLOWED_ORIGINS = "https://health.andernet.dev",

  # Production subdomain endpoints
  BASE_URL = "https://health.andernet.dev",
  API_BASE_URL = "https://api.health.andernet.dev",
  WEBSOCKET_URL = "wss://ws.health.andernet.dev",
  EMERGENCY_API_URL = "https://emergency.health.andernet.dev",
  CAREGIVER_API_URL = "https://caregiver.health.andernet.dev",
  FILES_BASE_URL = "https://files.health.andernet.dev",

  # Production configuration
  LOG_LEVEL = "info",
  FALL_DETECTION_THRESHOLD = "0.85",
  EMERGENCY_RESPONSE_DELAY = "30",
  MAX_FILE_SIZE = "500MB",
  SESSION_TIMEOUT = "12h"
}

# KV storage namespaces for health data
[[kv_namespaces]]
binding = "HEALTH_KV"
id = "health_data_production" # TODO: set via `wrangler kv namespace create HEALTH_KV`
preview_id = "health_data_preview"

[[kv_namespaces]]
binding = "USER_SESSIONS"
id = "user_sessions_production" # TODO: set via `wrangler kv namespace create USER_SESSIONS`
preview_id = "user_sessions_preview"

[[kv_namespaces]]
binding = "FALL_INCIDENTS"
id = "fall_incidents_production" # TODO: set via `wrangler kv namespace create FALL_INCIDENTS`
preview_id = "fall_incidents_preview"

[[kv_namespaces]]
binding = "CAREGIVER_ACCESS"
id = "caregiver_access_production" # TODO: set via `wrangler kv namespace create CAREGIVER_ACCESS`
preview_id = "caregiver_access_preview"

# R2 storage buckets for health data files
[[r2_buckets]]
binding = "HEALTH_FILES"
bucket_name = "health-data-files" # TODO: create via `wrangler r2 bucket create health-data-files`

[[r2_buckets]]
binding = "HEALTH_EXPORTS"
bucket_name = "health-exports" # TODO: create via `wrangler r2 bucket create health-exports`

[[r2_buckets]]
binding = "EMERGENCY_RECORDINGS"
bucket_name = "emergency-recordings" # TODO: create via `wrangler r2 bucket create emergency-recordings`

# Durable Objects for real-time features
[durable_objects]
bindings = [
  { name = "HEALTH_WEBSOCKET", class_name = "HealthWebSocket" },
  { name = "RATE_LIMITER", class_name = "RateLimiter" },
  { name = "FALL_MONITOR", class_name = "FallMonitor" },
  { name = "EMERGENCY_RESPONDER", class_name = "EmergencyResponder" },
  { name = "CAREGIVER_SESSION", class_name = "CaregiverSession" }
]

# Durable Objects migrations
[[migrations]]
tag = "v1"
new_classes = ["HealthWebSocket", "RateLimiter"]

[[migrations]]
tag = "v2"
new_classes = ["FallMonitor", "EmergencyResponder"]

[[migrations]]
tag = "v3"
new_classes = ["CaregiverSession"]

# Analytics Engine for health metrics and fall detection
[[analytics_engine_datasets]]
binding = "HEALTH_ANALYTICS"
dataset = "health_metrics"

[[analytics_engine_datasets]]
binding = "FALL_ANALYTICS"
dataset = "fall_detection_metrics"

[[analytics_engine_datasets]]
binding = "EMERGENCY_ANALYTICS"
dataset = "emergency_response_metrics"

# Scheduled triggers for maintenance and monitoring
[triggers]
crons = [
  "0 * * * *",    # Hourly: data cleanup and aggregation
  "0 0 * * *",    # Daily: health trend analysis
  "0 0 * * 1",    # Weekly: fall risk assessment updates
  "0 2 * * *"     # Daily at 2 AM: emergency contact verification
]

# Queue bindings for async processing
[[queues]]
binding = "HEALTH_PROCESSING_QUEUE"
queue_name = "health-data-processing"

[[queues]]
binding = "EMERGENCY_QUEUE"
queue_name = "emergency-alerts"

[[queues]]
binding = "NOTIFICATION_QUEUE"
queue_name = "user-notifications"

# Custom domain configuration - Health Platform API Architecture
#
# Domain Strategy:
# - health.andernet.dev          = Main web app (React SPA)
# - api.health.andernet.dev      = Core health data APIs
# - ws.health.andernet.dev       = WebSocket real-time connections
# - emergency.health.andernet.dev = Emergency response APIs (high priority)
# - caregiver.health.andernet.dev = Caregiver dashboard APIs
# - files.health.andernet.dev    = File uploads/downloads (Apple Health exports)

[env.production.routes]
pattern = "health.andernet.dev/*"
zone_name = "andernet.dev"

# Separate workers for API subdomains (deploy with different wrangler.toml configs)
# These would be separate deployments but sharing the same codebase:
#
# api.health.andernet.dev/*       -> health-api-worker
# ws.health.andernet.dev/*        -> health-websocket-worker
# emergency.health.andernet.dev/* -> health-emergency-worker
# caregiver.health.andernet.dev/* -> health-caregiver-worker
# files.health.andernet.dev/*     -> health-files-worker

# Alternative: Single worker with subdomain routing (current approach)
# All subdomains route to this worker, which handles routing internally

# Environment-specific KV namespace configuration
[env.development.kv_namespaces]
HEALTH_KV = "health_data_dev"
USER_SESSIONS = "user_sessions_dev"
FALL_INCIDENTS = "fall_incidents_dev"
CAREGIVER_ACCESS = "caregiver_access_dev"

# Compatibility for health data processing
[env.development.compatibility_flags]
nodejs_compat = true
streams_enable_constructors = true

[env.production.compatibility_flags]
nodejs_compat = true
streams_enable_constructors = true

# Secrets configuration (set via wrangler secret put)
# Core application secrets:
# wrangler secret put ENC_KEY --env production
# wrangler secret put API_ISS --env production
# wrangler secret put API_AUD --env production
# wrangler secret put API_JWKS_URL --env production
# wrangler secret put DEVICE_JWT_SECRET --env production

# Emergency and notification secrets:
# wrangler secret put TWILIO_ACCOUNT_SID --env production
# wrangler secret put TWILIO_AUTH_TOKEN --env production
# wrangler secret put SENDGRID_API_KEY --env production
# wrangler secret put EMERGENCY_WEBHOOK_URL --env production

# Third-party integrations:
# wrangler secret put APPLE_HEALTHKIT_CLIENT_ID --env production
# wrangler secret put APPLE_HEALTHKIT_CLIENT_SECRET --env production
# wrangler secret put FALL_DETECTION_API_KEY --env production

# Rate limiting configuration
[env.development.limits]
cpu_ms = 100000  # Extended for development debugging

[env.production.limits]
cpu_ms = 50000   # Production optimized
