name: iOS Testing

on:
  push:
    branches: [main, develop]
    paths:
      - 'ios/**'
      - '.github/workflows/ios-tests.yml'
  pull_request:
    branches: [main]
    paths:
      - 'ios/**'

jobs:
  ios-tests:
    name: iOS Unit and UI Tests
    runs-on: macos-latest
    timeout-minutes: 60

    strategy:
      matrix:
        xcode-version: ['15.0']
        ios-simulator: ['iPhone 15', 'iPad Air (5th generation)']

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode-version }}

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Developer/Xcode/DerivedData
            ios/build
          key: ${{ runner.os }}-xcode-${{ matrix.xcode-version }}-${{ hashFiles('ios/**/*.swift', 'ios/**/*.plist', 'ios/**/*.xcconfig') }}
          restore-keys: |
            ${{ runner.os }}-xcode-${{ matrix.xcode-version }}-

      - name: List Available Simulators
        run: xcrun simctl list devices available

      - name: Boot Simulator
        run: |
          UDID=$(xcrun simctl create "Test-${{ matrix.ios-simulator }}" "${{ matrix.ios-simulator }}")
          xcrun simctl boot "$UDID"
          echo "SIMULATOR_UDID=$UDID" >> $GITHUB_ENV

      - name: Build for Testing
        run: |
          xcodebuild build-for-testing \
            -project ios/HealthKitBridge.xcodeproj \
            -scheme HealthKitBridge \
            -destination "platform=iOS Simulator,id=$SIMULATOR_UDID" \
            -derivedDataPath ios/build

      - name: Run Unit Tests
        run: |
          xcodebuild test-without-building \
            -project ios/HealthKitBridge.xcodeproj \
            -scheme HealthKitBridge-UnitTests \
            -destination "platform=iOS Simulator,id=$SIMULATOR_UDID" \
            -derivedDataPath ios/build \
            -enableCodeCoverage YES \
            -testPlan HealthKitBridge.xctestplan \
            -only-testing HealthKitBridgeTests

      - name: Run UI Tests
        run: |
          xcodebuild test-without-building \
            -project ios/HealthKitBridge.xcodeproj \
            -scheme HealthKitBridge-UITests \
            -destination "platform=iOS Simulator,id=$SIMULATOR_UDID" \
            -derivedDataPath ios/build \
            -only-testing HealthKitBridgeUITests

      - name: Generate Coverage Report
        if: always()
        run: |
          xcrun xccov view \
            --report \
            --json \
            ios/build/Logs/Test/*.xcresult > ios/coverage-report.json

      - name: Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-reports-${{ matrix.ios-simulator }}
          path: |
            ios/coverage-report.json
            ios/build/Logs/Test/*.xcresult

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.ios-simulator }}
          path: |
            ios/build/Logs/Test/*.xcresult

      - name: Cleanup Simulator
        if: always()
        run: |
          xcrun simctl shutdown "$SIMULATOR_UDID"
          xcrun simctl delete "$SIMULATOR_UDID"

  lint-and-format:
    name: Swift Lint and Format Check
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install SwiftLint
        run: |
          brew install swiftlint

      - name: Install swift-format
        run: |
          brew install swift-format

      - name: Run SwiftLint
        run: |
          cd ios
          swiftlint lint --reporter github-actions-logging

      - name: Check Swift Formatting
        run: |
          cd ios
          swift-format lint --recursive HealthKitBridge/

  performance-tests:
    name: Performance Tests
    runs-on: macos-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'

      - name: Run Performance Tests
        run: |
          UDID=$(xcrun simctl create "Perf-Test-iPhone" "iPhone 15")
          xcrun simctl boot "$UDID"

          xcodebuild test \
            -project ios/HealthKitBridge.xcodeproj \
            -scheme HealthKitBridge \
            -destination "platform=iOS Simulator,id=$UDID" \
            -testPlan HealthKitBridge.xctestplan \
            -only-testing "PerformanceMonitorTests"

          xcrun simctl shutdown "$UDID"
          xcrun simctl delete "$UDID"

      - name: Upload Performance Results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: ios/build/Logs/Test/*.xcresult
