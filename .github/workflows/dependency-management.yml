name: Dependency Management

on:
  schedule:
    # Check for dependency updates every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update-type:
        description: 'Type of updates to check'
        required: false
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
          - all

permissions:
  contents: write
  pull-requests: write

jobs:
  dependency-updates:
    name: Check Dependency Updates
    runs-on: ubuntu-latest
    if: github.repository == 'and3rn3t/health'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install npm-check-updates
        run: npm install -g npm-check-updates

      - name: Check for updates
        run: |
          echo "=== Current package.json ==="
          cat package.json | jq '.dependencies, .devDependencies'

          echo "=== Available Updates ==="
          ncu --format table

          echo "=== Updating dependencies ==="
          case "${{ github.event.inputs.update-type || 'patch' }}" in
            "patch")
              ncu -u --target patch
              ;;
            "minor")
              ncu -u --target minor
              ;;
            "major")
              ncu -u --target latest
              ;;
            "all")
              ncu -u
              ;;
          esac

      - name: Install updated dependencies
        run: |
          if [ -n "$(git diff package.json)" ]; then
            npm install
            npm audit fix --audit-level=moderate || true
          else
            echo "No updates available"
          fi

      - name: Run tests with updated dependencies
        run: |
          npm run lint || echo "Linting completed with issues"
          npm run build || echo "Build completed with issues"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        if: success()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore(deps): update dependencies (${{ github.event.inputs.update-type || 'patch' }})"
          title: "chore(deps): Update dependencies (${{ github.event.inputs.update-type || 'patch' }})"
          body: |
            ## Dependency Updates

            This PR contains dependency updates for ${{ github.event.inputs.update-type || 'patch' }} versions.

            ### Changes
            - Updated npm dependencies
            - Ran security audit fixes

            ### Testing
            - [x] Linting passed
            - [x] Build completed successfully
            - [ ] Manual testing required

            ### Notes
            Please review the changes and ensure compatibility before merging.

            Auto-generated by dependency management workflow.
          branch: "dependency-updates/${{ github.event.inputs.update-type || 'patch' }}"
          labels: |
            dependencies
            automated
          draft: false

  cleanup-caches:
    name: Cleanup Old Caches
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    permissions:
      actions: write

    steps:
      - name: Cleanup old caches
        uses: actions/github-script@v6
        with:
          script: |
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const oneWeekAgo = new Date();
            oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);

            for (const cache of caches.data.actions_caches) {
              const cacheDate = new Date(cache.created_at);
              if (cacheDate < oneWeekAgo) {
                console.log(`Deleting cache: ${cache.key} (${cache.created_at})`);
                await github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                });
              }
            }

  ios-dependency-updates:
    name: iOS Dependency Updates
    runs-on: macos-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'

      - name: Update iOS Dependencies
        run: |
          cd ios
          # Check for Swift package updates
          if [ -f "Package.swift" ]; then
            swift package update
          fi

          # Update CocoaPods if Podfile exists
          if [ -f "Podfile" ]; then
            pod update --repo-update
          fi

      - name: Build iOS Project
        run: |
          cd ios
          xcodebuild clean build \
            -project HealthKitBridge.xcodeproj \
            -scheme HealthKitBridge \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO

      - name: Create iOS Dependency Update PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(ios): update iOS dependencies'
          title: 'chore(ios): Update iOS Dependencies'
          body: |
            ## iOS Dependency Updates

            This PR contains updates for iOS dependencies.

            ### Changes
            - Updated Swift packages
            - Updated CocoaPods (if applicable)

            ### Testing
            - [x] iOS build successful
            - [ ] Manual testing on device required

            Auto-generated by dependency management workflow.
          branch: ios-dependency-updates
          labels: |
            dependencies
            ios
            automated
