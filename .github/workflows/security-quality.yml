name: Security and Quality

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run security scans weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-scan:
    name: Security Vulnerability Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --prefer-offline
          cd scripts/node && npm ci --prefer-offline

      - name: Run npm audit
        run: |
          npm audit --audit-level=moderate || echo "Audit completed with findings"

      - name: Run Semgrep Security Scan
        uses: semgrep/semgrep-action@v1
        if: github.event_name != 'schedule'
        continue-on-error: true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: semgrep.sarif
        continue-on-error: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v3
        continue-on-error: true
        with:
          fail-on-severity: moderate
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for SonarCloud

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --prefer-offline
          cd scripts/node && npm ci --prefer-offline

      - name: Run linting with reports
        run: |
          mkdir -p reports
          npm run lint -- --format json --output-file reports/eslint-report.json || true
          npm run lint -- --format unix > reports/eslint-report.txt || true

      - name: Run tests with coverage
        run: |
          npm run test || echo "Tests completed"
        continue-on-error: true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        if: github.repository == 'and3rn3t/health'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true

      - name: Upload Code Quality Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-quality-reports
          path: |
            reports/
            coverage/
          retention-days: 14

  license-check:
    name: License Compliance
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci --prefer-offline
          cd scripts/node && npm ci --prefer-offline

      - name: Install license checker
        run: npm install -g license-checker

      - name: Check licenses
        run: |
          license-checker --summary --production --failOn 'GPL-2.0; GPL-3.0; AGPL-1.0; AGPL-3.0; LGPL-2.0; LGPL-2.1; LGPL-3.0' > license-report.txt
          echo "=== License Summary ==="
          cat license-report.txt

      - name: Upload License Report
        uses: actions/upload-artifact@v4
        with:
          name: license-report
          path: license-report.txt
          retention-days: 30
